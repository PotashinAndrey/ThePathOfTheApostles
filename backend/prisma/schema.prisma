generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String        @id @default(cuid())
  email            String        @unique
  name             String
  currentApostleId String?
  joinDate         DateTime      @default(now())
  lastActiveDate   DateTime      @default(now())
  streak           Int           @default(0)
  totalDays        Int           @default(0)
  chatMessages     ChatMessage[]
  missions         Mission[]

  @@map("users")
}

model Apostle {
  id             String        @id
  name           String
  archetype      String
  virtue         String
  description    String
  personality    String        @db.Text
  color          String
  icon           String
  systemPrompt   String        @db.Text
  welcomeMessage String        @db.Text
  traits         String[]
  strengths      String[]
  keywords       String[]
  chatMessages   ChatMessage[]
  missions       Mission[]
  weeklyTasks    WeeklyTask[]

  @@map("apostles")
}

model Mission {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  tasks       String[]
  duration    Int
  startDate   DateTime @default(now())
  endDate     DateTime
  isCompleted Boolean  @default(false)
  progress    Int      @default(0)
  userId      String
  apostleId   String
  apostle     Apostle  @relation(fields: [apostleId], references: [id])
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("missions")
}

model ChatMessage {
  id        String   @id @default(cuid())
  content   String   @db.Text
  role      String
  timestamp DateTime @default(now())
  keywords  String[]
  emotion   String?
  userId    String
  apostleId String
  apostle   Apostle  @relation(fields: [apostleId], references: [id])
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("chat_messages")
}

model UserStats {
  id                String   @id @default(cuid())
  userId            String   @unique
  totalMissions     Int      @default(0)
  completedMissions Int      @default(0)
  averageProgress   Float    @default(0)
  longestStreak     Int      @default(0)
  updatedAt         DateTime @updatedAt

  @@map("user_stats")
}

model WeeklyTask {
  id          String   @id @default(cuid())
  title       String
  description String   @db.Text
  day         Int
  type        String
  duration    String
  difficulty  String
  scripture   String?
  tips        String[]
  apostleId   String
  apostle     Apostle  @relation(fields: [apostleId], references: [id])

  @@map("weekly_tasks")
}
