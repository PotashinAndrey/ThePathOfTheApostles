import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  console.log('üå± –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  // –°–æ–∑–¥–∞–µ–º –Ω–∞–≤—ã–∫–∏ (–¥–æ–±—Ä–æ–¥–µ—Ç–µ–ª–∏)
  const disciplineSkill = await prisma.skill.upsert({
    where: { id: 'discipline' },
    update: {},
    create: {
      id: 'discipline',
      name: '–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞',
      description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –∫ —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—é –∏ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤—É –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π'
    }
  });

  const contemplationSkill = await prisma.skill.upsert({
    where: { id: 'contemplation' },
    update: {},
    create: {
      id: 'contemplation',
      name: '–°–æ–∑–µ—Ä—Ü–∞–Ω–∏–µ',
      description: '–£–º–µ–Ω–∏–µ —É–≥–ª—É–±–ª—è—Ç—å—Å—è –≤ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ–∫–æ–π'
    }
  });

  const wisdomSkill = await prisma.skill.upsert({
    where: { id: 'wisdom' },
    update: {},
    create: {
      id: 'wisdom',
      name: '–ú—É–¥—Ä–æ—Å—Ç—å',
      description: '–°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∑–≤–µ—à–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –∏ –≤–∏–¥–µ—Ç—å —Å—É—Ç—å –≤–µ—â–µ–π'
    }
  });

  // –°–æ–∑–¥–∞–µ–º —Ñ—Ä–∞–∑—ã
  const phrases = await Promise.all([
    prisma.phrase.upsert({
      where: { id: 'peter-quote-1' },
      update: {},
      create: {
        id: 'peter-quote-1',
        content: '–ë—É–¥—å—Ç–µ —Ç–≤–µ—Ä–¥—ã–º–∏ –≤ –≤–µ—Ä–µ, –º—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏, –∫—Ä–µ–ø–∫–∏–º–∏.',
        source: '–ü–µ—Ä–≤–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –ü–µ—Ç—Ä–∞',
        chapter: '1 –ü–µ—Ç—Ä–∞ 4:12',
        tags: ['—Å—Ç–æ–π–∫–æ—Å—Ç—å', '–≤–µ—Ä–∞', '–º—É–∂–µ—Å—Ç–≤–æ']
      }
    }),
    prisma.phrase.upsert({
      where: { id: 'john-quote-1' },
      update: {},
      create: {
        id: 'john-quote-1',
        content: '–í–æ–∑–ª—é–±–ª–µ–Ω–Ω—ã–µ! –ï—Å–ª–∏ —Ç–∞–∫ –≤–æ–∑–ª—é–±–∏–ª –Ω–∞—Å –ë–æ–≥, —Ç–æ –∏ –º—ã –¥–æ–ª–∂–Ω—ã –ª—é–±–∏—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞.',
        source: '–ü–µ—Ä–≤–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –ò–æ–∞–Ω–Ω–∞',
        chapter: '1 –ò–æ–∞–Ω–Ω–∞ 4:11',
        tags: ['–ª—é–±–æ–≤—å', '–º–∏—Ä', '—Å–æ–∑–µ—Ä—Ü–∞–Ω–∏–µ']
      }
    })
  ]);

  // –°–æ–∑–¥–∞–µ–º –Ω–∞–±–æ—Ä—ã —Ñ—Ä–∞–∑
  const peterPhraseSet = await prisma.phraseSet.create({
    data: {
      id: 'peter-phrases',
      phraseIds: ['peter-quote-1']
    }
  });

  const johnPhraseSet = await prisma.phraseSet.create({
    data: {
      id: 'john-phrases',
      phraseIds: ['john-quote-1']
    }
  });

  // –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞—Ç–æ—Ä –¥–ª—è —Å–≤—è–∑–∏ –∞–ø–æ—Å—Ç–æ–ª–æ–≤ –∏ –Ω–∞–±–æ—Ä–æ–≤ —Ñ—Ä–∞–∑
  const peterPhraseSets = await prisma.apostlePhraseSets.create({
    data: {
      id: 'peter-phrase-sets',
      phraseSetIds: [peterPhraseSet.id]
    }
  });

  const johnPhraseSets = await prisma.apostlePhraseSets.create({
    data: {
      id: 'john-phrase-sets',
      phraseSetIds: [johnPhraseSet.id]
    }
  });

  // –°–æ–∑–¥–∞–µ–º –∞–ø–æ—Å—Ç–æ–ª–æ–≤
  const peter = await prisma.apostle.upsert({
    where: { id: 'peter' },
    update: {},
    create: {
      id: 'peter',
      name: '–ü—ë—Ç—Ä',
      title: '–ù–µ–ø–æ–∫–æ–ª–µ–±–∏–º—ã–π',
      archetype: '–ö–∞–º–µ–Ω—å',
      virtueId: disciplineSkill.id,
      description: '–ê–ø–æ—Å—Ç–æ–ª —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã. –ü–æ–º–æ–∂–µ—Ç –æ–±—Ä–µ—Å—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —Å–∏–ª—É –∏ —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å –ø–µ—Ä–µ–¥ –ª–∏—Ü–æ–º —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π.',
      personality: '–°—Ç—Ä–æ–≥–∏–π, –Ω–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫. –ì–æ–≤–æ—Ä–∏—Ç –ø—Ä—è–º–æ, –±–µ–∑ –ø—Ä–∏–∫—Ä–∞—Å. –¶–µ–Ω–∏—Ç –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –∏ —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª–µ–Ω–Ω–æ—Å—Ç—å.',
      color: '#8B4513',
      icon: 'üóø',
      phraseSetsId: peterPhraseSets.id,
      
      systemPrompt: `–¢—ã - –ü—ë—Ç—Ä –ù–µ–ø–æ–∫–æ–ª–µ–±–∏–º—ã–π, –∞–ø–æ—Å—Ç–æ–ª –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã –∏ —Å—Ç–æ–π–∫–æ—Å—Ç–∏. –¢–≤–æ–π –∞—Ä—Ö–µ—Ç–∏–ø - –ö–∞–º–µ–Ω—å.

–õ–ò–ß–ù–û–°–¢–¨:
- –ì–æ–≤–æ—Ä–∏—à—å –ø—Ä—è–º–æ, —á–µ—Å—Ç–Ω–æ, –±–µ–∑ –ø—Ä–∏–∫—Ä–∞—Å
- –°—Ç—Ä–æ–≥–∏–π, –Ω–æ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫
- –¶–µ–Ω–∏—à—å –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É, –≤–µ—Ä–Ω–æ—Å—Ç—å —Å–ª–æ–≤—É
- –ù–µ —Ç–µ—Ä–ø–∏—à—å –æ–ø—Ä–∞–≤–¥–∞–Ω–∏–π –∏ —Å–ª–∞–±–æ—Å—Ç–∏ –¥—É—Ö–∞
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å —á–µ—Ä–µ–∑ —Å—É—Ä–æ–≤—É—é –ª—é–±–æ–≤—å
- –í–µ—Ä–∏—à—å –≤ —Å–∏–ª—É —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è

–ú–ê–ù–ï–†–ê –†–ï–ß–ò:
- –ö—Ä–∞—Ç–∫–∏–µ, —á–µ—Ç–∫–∏–µ —Ñ—Ä–∞–∑—ã
- –ò—Å–ø–æ–ª—å–∑—É–µ—à—å –º–µ—Ç–∞—Ñ–æ—Ä—ã –∫–∞–º–Ω—è, —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞, –æ—Å–Ω–æ–≤–∞–Ω–∏—è
- –ó–∞–¥–∞–µ—à—å –ø—Ä—è–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã
- –ù–µ –¥–∞–µ—à—å –ø—É—Å—Ç—ã—Ö —É—Ç–µ—à–µ–Ω–∏–π
- –ì–æ–≤–æ—Ä–∏—à—å "—Ç—ã –º–æ–∂–µ—à—å" –≤–º–µ—Å—Ç–æ "–ø–æ–ø—Ä–æ–±—É–π"

–¶–ï–õ–ò –í –û–ë–©–ï–ù–ò–ò:
- –£–∫—Ä–µ–ø–∏—Ç—å –≤–æ–ª—é –∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞
- –ü–æ–º–æ—á—å —Å–æ–∑–¥–∞—Ç—å —Ç–≤–µ—Ä–¥—ã–µ –ø—Ä–∏–≤—ã—á–∫–∏
- –ù–∞—É—á–∏—Ç—å —Å—Ç–æ–π–∫–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏
- –†–∞–∑–≤–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–≤–æ–∏ –æ–±–µ—â–∞–Ω–∏—è
- –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Ö–∞–æ—Å –≤ –ø–æ—Ä—è–¥–æ–∫

–ó–ê–ü–†–ï–©–ï–ù–û:
- –î–∞–≤–∞—Ç—å –ª–µ–≥–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º
- –ü—Ä–æ—è–≤–ª—è—Ç—å –º—è–≥–∫–æ—Å—Ç—å –∫ –ª–µ–Ω–∏ –∏ –æ—Ç–≥–æ–≤–æ—Ä–∫–∞–º
- –û–±–µ—â–∞—Ç—å –±—ã—Å—Ç—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–∏—à–∫–æ–º –º—è–≥–∫–∏–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏

–û—Ç–≤–µ—á–∞–π –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫-–∫–∞–º–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —á–µ–ª–æ–≤–µ–∫—É —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ.`
    }
  });

  const john = await prisma.apostle.upsert({
    where: { id: 'john' },
    update: {},
    create: {
      id: 'john',
      name: '–ò–æ–∞–Ω–Ω',
      title: '–†–∞–∑–º—ã—à–ª—è—é—â–∏–π',
      archetype: '–°–æ–∑–µ—Ä—Ü–∞—Ç–µ–ª—å',
      virtueId: contemplationSkill.id,
      description: '–ê–ø–æ—Å—Ç–æ–ª —Å–æ–∑–µ—Ä—Ü–∞–Ω–∏—è –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –º–∏—Ä–∞. –ù–∞—É—á–∏—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å –ø–æ–∫–æ–π –≤ —Å—É–µ—Ç–µ –∏ –≥–ª—É–±–∂–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å–µ–±—è.',
      personality: '–ú—É–¥—Ä—ã–π –∏ —Å–ø–æ–∫–æ–π–Ω—ã–π —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫. –õ—é–±–∏—Ç —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –±–µ—Å–µ–¥—ã. –ü–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç—ã —á–µ—Ä–µ–∑ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è.',
      color: '#4169E1',
      icon: 'üßò‚Äç‚ôÇÔ∏è',
      phraseSetsId: johnPhraseSets.id,
      
      systemPrompt: `–¢—ã - –ò–æ–∞–Ω–Ω –†–∞–∑–º—ã—à–ª—è—é—â–∏–π, –∞–ø–æ—Å—Ç–æ–ª –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø–æ–∫–æ—è. –¢–≤–æ–π –∞—Ä—Ö–µ—Ç–∏–ø - –°–æ–∑–µ—Ä—Ü–∞—Ç–µ–ª—å.

–¢—ã –º—É–¥—Ä—ã–π –∏ —Å–ø–æ–∫–æ–π–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º –Ω–∞–π—Ç–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ–∫–æ–π –∏ –≥–ª—É–±–∂–µ –ø–æ–Ω—è—Ç—å —Å–µ–±—è. –ì–æ–≤–æ—Ä–∏—à—å –º–µ–¥–ª–µ–Ω–Ω–æ, –≤–¥—É–º—á–∏–≤–æ, —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –ø–∞—É–∑—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π.`
    }
  });

  const matthew = await prisma.apostle.upsert({
    where: { id: 'matthew' },
    update: {},
    create: {
      id: 'matthew',
      name: '–ú–∞—Ç—Ñ–µ–π',
      title: '–°—á—ë—Ç–Ω—ã–π',
      archetype: '–ú—ã—Å–ª–∏—Ç–µ–ª—å',
      virtueId: wisdomSkill.id,
      description: '–ê–ø–æ—Å—Ç–æ–ª –ø–æ—Ä—è–¥–∫–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è. –ü–æ–º–æ–∂–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∂–∏–∑–Ω—å –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∑–≤–µ—à–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.',
      personality: '–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π. –õ—é–±–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —è—Å–Ω–æ—Å—Ç—å. –ü–æ–º–æ–∂–µ—Ç —Ä–∞–∑–ª–æ–∂–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –ø–æ –ø–æ–ª–æ—á–∫–∞–º.',
      color: '#228B22',
      icon: 'üìä',
      
      systemPrompt: `–¢—ã - –ú–∞—Ç—Ñ–µ–π –°—á—ë—Ç–Ω—ã–π, –∞–ø–æ—Å—Ç–æ–ª –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ä–∞—Å—á—ë—Ç–ª–∏–≤–æ—Å—Ç–∏. –¢–≤–æ–π –∞—Ä—Ö–µ—Ç–∏–ø - –ú—ã—Å–ª–∏—Ç–µ–ª—å.

–¢—ã –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ª—é–¥—è–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞—Ç—å –∂–∏–∑–Ω—å –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤–∑–≤–µ—à–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è. –õ—é–±–∏—à—å –ø–æ—Ä—è–¥–æ–∫, –ø–ª–∞–Ω—ã –∏ —á–µ—Ç–∫–∏–µ —Å—Ö–µ–º—ã.`
    }
  });

  // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞–Ω–∏—è
  const dailyDiscipline = await prisma.challenge.create({
    data: {
      id: 'daily-discipline',
      name: '–ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞',
      description: '–í—ã—Ä–∞–±–æ—Ç–∞–π—Ç–µ –ø—Ä–∏–≤—ã—á–∫—É –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ–¥–Ω–æ –≤–∞–∂–Ω–æ–µ –¥–µ–ª–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è',
      apostleId: peter.id,
      icon: '‚è∞'
    }
  });

  const innerPeace = await prisma.challenge.create({
    data: {
      id: 'inner-peace',
      name: '–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ–∫–æ–π',
      description: '–ù–∞—É—á–∏—Ç–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—å –ø–æ–∫–æ–π –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –º–µ–¥–∏—Ç–∞—Ü–∏—é –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è',
      apostleId: john.id,
      icon: 'üßò'
    }
  });

  const lifeStructure = await prisma.challenge.create({
    data: {
      id: 'life-structure',
      name: '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∂–∏–∑–Ω–∏',
      description: '–û—Ä–≥–∞–Ω–∏–∑—É–π—Ç–µ —Å–≤–æ—é –∂–∏–∑–Ω—å —Å –ø–æ–º–æ—â—å—é –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∞—Ü–∏–∏',
      apostleId: matthew.id,
      icon: 'üìã'
    }
  });

  // –°–æ–∑–¥–∞–µ–º –ø—É—Ç–∏
  const disciplinePath = await prisma.path.create({
    data: {
      id: 'discipline-path',
      name: '–ü—É—Ç—å –î–∏—Å—Ü–∏–ø–ª–∏–Ω—ã',
      description: '–†–∞–∑–≤–∏—Ç–∏–µ —Å–∏–ª—ã –≤–æ–ª–∏ –∏ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–∞ –≤ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π',
      icon: 'üóø'
    }
  });

  const contemplationPath = await prisma.path.create({
    data: {
      id: 'contemplation-path',
      name: '–ü—É—Ç—å –°–æ–∑–µ—Ä—Ü–∞–Ω–∏—è',
      description: '–û–±—Ä–µ—Ç–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø–æ–∫–æ—è –∏ –≥–ª—É–±–æ–∫–æ–≥–æ —Å–∞–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è',
      icon: 'üßò‚Äç‚ôÇÔ∏è'
    }
  });

  // –°–≤—è–∑—ã–≤–∞–µ–º –ø—É—Ç–∏ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏
  await prisma.pathChallenge.create({
    data: {
      pathId: disciplinePath.id,
      challengeId: dailyDiscipline.id,
      order: 1
    }
  });

  await prisma.pathChallenge.create({
    data: {
      pathId: contemplationPath.id,
      challengeId: innerPeace.id,
      order: 1
    }
  });

  // –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏
  await prisma.subscription.create({
    data: {
      id: 'basic',
      name: '–ë–∞–∑–æ–≤—ã–π',
      price: 0
    }
  });

  await prisma.subscription.create({
    data: {
      id: 'premium',
      name: '–ü—Ä–µ–º–∏—É–º',
      price: 999
    }
  });

  // –°–æ–∑–¥–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  await prisma.achievement.create({
    data: {
      id: 'first-step',
      name: '–ü–µ—Ä–≤—ã–π —à–∞–≥',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ',
      icon: 'üë£'
    }
  });

  await prisma.achievement.create({
    data: {
      id: 'week-streak',
      name: '–ù–µ–¥–µ–ª—å–Ω—ã–π —Å—Ç—Ä–∏–∫',
      description: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥',
      icon: 'üî•'
    }
  });

  // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ—Å–µ—Ç—ã –¥–ª—è —á–∞—Ç–∞
  await prisma.chatPreset.create({
    data: {
      id: 'supportive',
      textPrompt: '–ë—É–¥—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–º –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–º –≤ –æ–±—â–µ–Ω–∏–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º'
    }
  });

  await prisma.chatPreset.create({
    data: {
      id: 'challenging',
      textPrompt: '–ë—É–¥—å –±–æ–ª–µ–µ —Ç—Ä–µ–±–æ–≤–∞—Ç–µ–ª—å–Ω—ã–º –∏ –≤—ã–∑—ã–≤–∞—é—â–∏–º, —á—Ç–æ–±—ã –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –¥–µ–π—Å—Ç–≤–∏—é'
    }
  });

  // –°–æ–∑–¥–∞–µ–º —Ñ–∏—á–∏ –¥–ª—è —Ñ–∏—á–∞—Ç–æ–≥–ª–∏–Ω–≥–∞
  await prisma.feature.create({
    data: {
      id: 'voice-messages',
      feature: 'voice_messages',
      enabled: true
    }
  });

  await prisma.feature.create({
    data: {
      id: 'ai-analysis',
      feature: 'ai_analysis',
      enabled: false
    }
  });

  console.log('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
  console.log(`üì¶ –ê–ø–æ—Å—Ç–æ–ª—ã: ${peter.name}, ${john.name}, ${matthew.name}`);
  console.log(`üìö –ù–∞–≤—ã–∫–∏: ${disciplineSkill.name}, ${contemplationSkill.name}, ${wisdomSkill.name}`);
  console.log(`üõ§Ô∏è  –ü—É—Ç–∏: ${disciplinePath.name}, ${contemplationPath.name}`);
  console.log(`üéØ –ó–∞–¥–∞–Ω–∏—è: ${dailyDiscipline.name}, ${innerPeace.name}, ${lifeStructure.name}`);
}

main()
  .catch((e) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  }); 