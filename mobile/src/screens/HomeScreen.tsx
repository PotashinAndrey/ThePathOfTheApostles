import React from 'react';
import {
  View,
  Text,
  StyleSheet,
  ScrollView,
  TouchableOpacity,
  SafeAreaView,
} from 'react-native';
import { useThemeStore } from '../stores/themeStore';
import { useUserStore } from '../stores/userStore';
import { MissionCard } from '../components/MissionCard';

export const HomeScreen: React.FC = () => {
  const { theme, mode, toggleTheme } = useThemeStore();
  const { user, currentMission, streak, totalDays, logout } = useUserStore();

  const getGreeting = () => {
    const hour = new Date().getHours();
    if (hour < 12) return '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ';
    if (hour < 18) return '–î–æ–±—Ä—ã–π –¥–µ–Ω—å';
    return '–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä';
  };

  const getMotivationalQuote = () => {
    const quotes = [
      '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —ç—Ç–æ –Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å –ª—É—á—à–µ.',
      '–ü—É—Ç—å –∫ –º—É–¥—Ä–æ—Å—Ç–∏ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞.',
      '–í —Ç–∏—à–∏–Ω–µ —Å–µ—Ä–¥—Ü–∞ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –∏—Å—Ç–∏–Ω–Ω–∞—è —Å–∏–ª–∞.',
      '–¢–µ—Ä–ø–µ–Ω–∏–µ –∏ –ø–æ—Å—Ç–æ—è–Ω—Å—Ç–≤–æ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç —Ç—É—Ç–æ–≤—ã–π –ª–∏—Å—Ç –≤ —à–µ–ª–∫.',
    ];
    return quotes[Math.floor(Math.random() * quotes.length)];
  };

  return (
    <SafeAreaView style={[styles.container, { backgroundColor: theme.colors.background }]}>
      <ScrollView showsVerticalScrollIndicator={false}>
        {/* Header */}
        <View style={styles.header}>
          <View style={styles.greetingContainer}>
            <Text style={[styles.greeting, { color: theme.colors.text }]}>
              {getGreeting()}, {user?.name || '–ü—É—Ç–Ω–∏–∫'}
            </Text>
            <Text style={[styles.subtitle, { color: theme.colors.textSecondary }]}>
              {getMotivationalQuote()}
            </Text>
          </View>
          
          <TouchableOpacity
            style={[styles.themeToggle, { backgroundColor: theme.colors.surface }]}
            onPress={toggleTheme}
          >
            <Text style={{ fontSize: 20 }}>
              {mode === 'light' ? 'üåô' : '‚òÄÔ∏è'}
            </Text>
          </TouchableOpacity>
        </View>

        {/* Stats */}
        <View style={styles.statsContainer}>
          <View style={[styles.statCard, { backgroundColor: theme.colors.surface }]}>
            <Text style={[styles.statNumber, { color: theme.colors.spiritual }]}>
              {streak}
            </Text>
            <Text style={[styles.statLabel, { color: theme.colors.textSecondary }]}>
              –î–Ω–µ–π –ø–æ–¥—Ä—è–¥
            </Text>
          </View>
          <View style={[styles.statCard, { backgroundColor: theme.colors.surface }]}>
            <Text style={[styles.statNumber, { color: theme.colors.gold }]}>
              {totalDays}
            </Text>
            <Text style={[styles.statLabel, { color: theme.colors.textSecondary }]}>
              –í—Å–µ–≥–æ –¥–Ω–µ–π
            </Text>
          </View>
        </View>

        {/* Current Apostle */}
        {user?.currentApostle && (
          <View style={[styles.currentApostleCard, { backgroundColor: theme.colors.surface }]}>
            <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
              –í–∞—à –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫
            </Text>
            <View style={styles.apostleInfo}>
              <Text style={[styles.apostleIcon, { color: user.currentApostle.color }]}>
                {user.currentApostle.icon}
              </Text>
              <View style={styles.apostleDetails}>
                <Text style={[styles.apostleName, { color: theme.colors.text }]}>
                  {user.currentApostle.name}
                </Text>
                <Text style={[styles.apostleVirtue, { color: user.currentApostle.color }]}>
                  {user.currentApostle.virtue}
                </Text>
              </View>
            </View>
          </View>
        )}

        {/* Current Mission */}
        {currentMission ? (
          <View style={styles.missionSection}>
            <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
              –¢–µ–∫—É—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ
            </Text>
            <MissionCard mission={currentMission} />
          </View>
        ) : (
          <View style={[styles.noMissionCard, { backgroundColor: theme.colors.surface }]}>
            <Text style={[styles.noMissionText, { color: theme.colors.textSecondary }]}>
              –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
            </Text>
            <TouchableOpacity style={[styles.startButton, { backgroundColor: theme.colors.primary }]}>
              <Text style={styles.startButtonText}>–ù–∞—á–∞—Ç—å –ø—É—Ç—å</Text>
            </TouchableOpacity>
          </View>
        )}

        {/* Quick Actions */}
        <View style={styles.quickActions}>
          <Text style={[styles.sectionTitle, { color: theme.colors.text }]}>
            –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </Text>
          <View style={styles.actionButtons}>
            <TouchableOpacity style={[styles.actionButton, { backgroundColor: theme.colors.primary }]}>
              <Text style={styles.actionIcon}>üí¨</Text>
              <Text style={styles.actionText}>–ë–µ—Å–µ–¥–∞</Text>
            </TouchableOpacity>
            <TouchableOpacity style={[styles.actionButton, { backgroundColor: theme.colors.spiritual }]}>
              <Text style={styles.actionIcon}>üéØ</Text>
              <Text style={styles.actionText}>–ó–∞–¥–∞–Ω–∏—è</Text>
            </TouchableOpacity>
            <TouchableOpacity style={[styles.actionButton, { backgroundColor: theme.colors.gold }]}>
              <Text style={styles.actionIcon}>üìä</Text>
              <Text style={styles.actionText}>–ü—Ä–æ–≥—Ä–µ—Å—Å</Text>
            </TouchableOpacity>
          </View>
          
          {/* Dev Actions */}
          <View style={styles.devActions}>
            <TouchableOpacity 
              style={[styles.logoutButton, { backgroundColor: '#FF6B6B' }]}
              onPress={() => {
                console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
                logout();
              }}
            >
              <Text style={styles.logoutButtonText}>üö™ –í—ã–π—Ç–∏ (Dev)</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  header: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    padding: 20,
    paddingTop: 10,
  },
  greetingContainer: {
    flex: 1,
  },
  greeting: {
    fontSize: 24,
    fontWeight: '600',
    marginBottom: 4,
  },
  subtitle: {
    fontSize: 14,
    lineHeight: 20,
    fontStyle: 'italic',
  },
  themeToggle: {
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: 'center',
    alignItems: 'center',
  },
  statsContainer: {
    flexDirection: 'row',
    paddingHorizontal: 20,
    marginBottom: 20,
  },
  statCard: {
    flex: 1,
    padding: 16,
    borderRadius: 12,
    marginHorizontal: 6,
    alignItems: 'center',
  },
  statNumber: {
    fontSize: 28,
    fontWeight: 'bold',
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 12,
    textAlign: 'center',
  },
  currentApostleCard: {
    margin: 20,
    padding: 16,
    borderRadius: 16,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: '600',
    marginBottom: 12,
  },
  apostleInfo: {
    flexDirection: 'row',
    alignItems: 'center',
  },
  apostleIcon: {
    fontSize: 32,
    marginRight: 16,
  },
  apostleDetails: {
    flex: 1,
  },
  apostleName: {
    fontSize: 16,
    fontWeight: '600',
    marginBottom: 2,
  },
  apostleVirtue: {
    fontSize: 14,
    fontStyle: 'italic',
  },
  missionSection: {
    marginBottom: 20,
  },
  noMissionCard: {
    margin: 20,
    padding: 20,
    borderRadius: 16,
    alignItems: 'center',
  },
  noMissionText: {
    fontSize: 16,
    textAlign: 'center',
    marginBottom: 16,
  },
  startButton: {
    paddingHorizontal: 24,
    paddingVertical: 12,
    borderRadius: 24,
  },
  startButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: '600',
  },
  quickActions: {
    padding: 20,
  },
  actionButtons: {
    flexDirection: 'row',
    justifyContent: 'space-between',
  },
  actionButton: {
    flex: 1,
    paddingVertical: 16,
    marginHorizontal: 6,
    borderRadius: 16,
    alignItems: 'center',
  },
  actionIcon: {
    fontSize: 24,
    marginBottom: 8,
  },
  actionText: {
    color: '#FFFFFF',
    fontSize: 14,
    fontWeight: '500',
  },
  devActions: {
    marginTop: 16,
  },
  logoutButton: {
    flex: 1,
    padding: 16,
    borderRadius: 16,
    alignItems: 'center',
  },
  logoutButtonText: {
    color: '#FFFFFF',
    fontSize: 16,
    fontWeight: '600',
  },
}); 