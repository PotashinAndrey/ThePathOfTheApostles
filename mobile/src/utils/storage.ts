import AsyncStorage from '@react-native-async-storage/async-storage';
import { Platform } from 'react-native';

// Web-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π storage –∞–¥–∞–ø—Ç–µ—Ä
export const storage = {
  getItem: async (key: string): Promise<string | null> => {
    console.log('üì¶ storage.getItem –≤—ã–∑–≤–∞–Ω:', key, 'Platform:', Platform.OS);
    
    try {
      if (Platform.OS === 'web') {
        console.log('üåê –ò—Å–ø–æ–ª—å–∑—É–µ–º localStorage –¥–ª—è web');
        const item = localStorage.getItem(key);
        console.log('üåê localStorage.getItem —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', item);
        return item;
      } else {
        console.log('üì± –ò—Å–ø–æ–ª—å–∑—É–µ–º AsyncStorage –¥–ª—è mobile');
        const item = await AsyncStorage.getItem(key);
        console.log('üì± AsyncStorage.getItem —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', item);
        return item;
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ storage.getItem:', error);
      return null;
    }
  },

  setItem: async (key: string, value: string): Promise<void> => {
    console.log('üíæ storage.setItem –≤—ã–∑–≤–∞–Ω:', key, 'value length:', value.length, 'Platform:', Platform.OS);
    
    try {
      if (Platform.OS === 'web') {
        console.log('üåê –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage');
        localStorage.setItem(key, value);
      } else {
        console.log('üì± –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ AsyncStorage');
        await AsyncStorage.setItem(key, value);
      }
      console.log('‚úÖ storage.setItem —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ storage.setItem:', error);
    }
  },

  removeItem: async (key: string): Promise<void> => {
    console.log('üóëÔ∏è storage.removeItem –≤—ã–∑–≤–∞–Ω:', key, 'Platform:', Platform.OS);
    
    try {
      if (Platform.OS === 'web') {
        console.log('üåê –£–¥–∞–ª—è–µ–º –∏–∑ localStorage');
        localStorage.removeItem(key);
      } else {
        console.log('üì± –£–¥–∞–ª—è–µ–º –∏–∑ AsyncStorage');
        await AsyncStorage.removeItem(key);
      }
      console.log('‚úÖ storage.removeItem —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ storage.removeItem:', error);
    }
  },
}; 